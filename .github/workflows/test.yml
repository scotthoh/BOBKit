name: Test

on:
  pull_request:
    branches:
      - main
      - development

jobs:
  ubuntu2404:
    name: "Test build on Ubuntu 24.04"
    runs-on: ubuntu-24.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: apt-get
        run: |
          sudo apt-get update
          sudo apt-get install libz-dev python3-full g++ gfortran
      #- name: install pybind11
      #  run: |
      #    python3 -m pip install pybind11
      - name: build and test
        run: |
          g++ --version
          cmake --version
          python3 -m venv pyenv
          source pyenv/bin/activate
          python3 -m pip install pybind11
          python3 -m pip install numpy
          pip install --verbose .
          #cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DUSE_PYTHON=1 -DPython_EXECUTABLE=python3 -DBUILD_SHARED_LIBS=OFF
          #cmake --build build --config Debug -j2
          #cmake --build build --config Debug --target check -j2
          #sudo cmake --install build --config Debug
  ubuntu2004:
    name: "Test build Ubuntu 20.04"
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
      - name: apt-get
        run: |
          sudo apt-get update
          sudo apt-get install libz-dev python3-pip g++ gfortran python3-numpy
      - name: install pybind11
        run: |
          python3 -m pip install pybind11
      - name: build and test
        run: |
          g++ --version
          cmake --version
          sudo pip install --verbose .
          #cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DUSE_PYTHON=1 -DPython_EXECUTABLE=python3 -DBUILD_SHARED_LIBS=OFF
          #cmake --build build --config Debug -j2
          #cmake --build build --config Debug --target check -j2
          #sudo cmake --install build --config Debug
          
        #uses: actions/setup-python@v5
        #with:
        #  # Semantic version range syntax or exact version of a Python version
        #  python-version: '3.8'
        #  # Optional - x64 or x86 architecture, defaults to x64
      
      #- name: Add requirements
      #  run: python -m pip install --upgrade wheel setuptools
      #
      #- name: Build and install
      #  run: pip install --verbose .

      
